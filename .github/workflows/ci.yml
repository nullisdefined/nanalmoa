name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 저장소 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Docker 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # 환경 변수 파일 생성
      - name: Create .env files
        run: |
          echo "${{ secrets.CLIENT_ENV }}" > ./packages/client/.env
          echo "${{ secrets.SERVER_ENV }}" > ./packages/server/.env

      # Yarn 설치 (루트에서 workspace 설정 적용)
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      # Client 빌드 & Push
      - name: Build and Push Client Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/client:latest -f packages/client/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/client:latest

      # Server 빌드 & Push
      - name: Build and Push Server Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/server:latest -f packages/server/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/server:latest

      # Nginx 빌드 & Push
      - name: Build and Push Nginx Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest -f nginx/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest

      # SSH로 EC2 접속 후 컨테이너 실행
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/client:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/server:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
            docker-compose -f /path/to/docker-compose.yml down
            docker-compose -f /path/to/docker-compose.yml up -d
